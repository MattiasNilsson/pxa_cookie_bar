plugin.tx_pxacookiebar {
	view {
		templateRootPaths {
			10 = {$plugin.tx_pxacookiebar.view.templateRootPath}
		}
		partialRootPaths {
			10 = {$plugin.tx_pxacookiebar.view.partialRootPath}
		}
		layoutRootPaths {
			10 = {$plugin.tx_pxacookiebar.view.layoutRootPath}
		}
	}

	persistence {
		storagePid = {$plugin.tx_pxacookiebar.persistence.storagePid}
	}

	features {
		# uncomment the following line to enable the new Property Mapper.
		# rewrittenPropertyMapper = 1
	}

	settings {
		enable = 1
		disableCookies = {$plugin.tx_pxacookiebar.settings.disableCookies}
		page = {$plugin.tx_pxacookiebar.settings.page}
		targetBlank = {$plugin.tx_pxacookiebar.settings.targetBlank}
		showOnlyOnLogin = {$plugin.tx_pxacookiebar.settings.showOnlyOnLogin}
		stylingVersion = {$plugin.tx_pxacookiebar.settings.stylingVersion}
		useSubDomain = {$plugin.tx_pxacookiebar.settings.useSubDomain}
		subDomain = {$plugin.tx_pxacookiebar.settings.subDomain}
	}
}

page.includeJSFooter.cookieWarning = EXT:pxa_cookie_bar/Resources/Public/Js/pxa_cookie_warning.js
page.includeCSS.cookieWarning = EXT:pxa_cookie_bar/Resources/Public/Css/bar_v_{$plugin.tx_pxacookiebar.settings.stylingVersion}.css

# options
page.headerData.86 = COA
page.headerData.86 {
	# helper options
	10 = TEXT
	10 {
		typolink {
			parameter.data = TSFE:id
			additionalParams = &type=314638125&tx_pxacookiebar_pxacookiebar[action]=closeWarning
			addQueryString = 1
			addQueryString.method = GET
			useCacheHash = 1
			forceAbsoluteUrl = 1
			returnLast = url
		}
		wrap = cookieCloseUrl:"|",
	}

	20 = TEXT
	20 {
		stdWrap {
			data = TSFE:sys_language_uid
			wrap = &type=314638125&L=|
			dataWrap = cookieBarUrl:"{getIndpEnv:TYPO3_REQUEST_HOST}/?id={TSFE:id}|",
		}
	}

	30 = TEXT
	30 {
		value (
getCookie : function(c_name) {
	var i, x, y, ARRcookies = document.cookie.split(";");
	for (i = 0; i < ARRcookies.length; i++) {
		x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
		y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
		x = x.replace(/^\s+|\s+$/g, "");
		if (x == c_name) {
			return unescape(y) == '1';
		}
	}

	return false;
},
)
	}

	wrap = <script>var PxaCookieWarningHelper = {|};PxaCookieWarningHelper['cookieIsSet']=PxaCookieWarningHelper.getCookie('pxa_cookie_warning');</script>
}

[globalVar = LIT:1 = {$plugin.tx_pxacookiebar.settings.disableCookies}]
# disallow JS to SetCookie, should be on top of the page
page.headerData.86 {
	40 = TEXT
	40 {
		value (
pxaPreventJsFromSettingCookies: function() {
	if(!document.__defineGetter__) {
    	Object.defineProperty(document, 'cookie', {
			get: function(){return '';},
            set: function(){return true}
        });
	} else {
        document.__defineGetter__("cookie", function() {return '';} );
        document.__defineSetter__("cookie", function() {} );
    }
},
)
	}

	50 = TEXT
	50.value = isActiveConsent: true,

	wrap (
<script>var PxaCookieWarningHelper = {|};
PxaCookieWarningHelper['cookieIsSet']=PxaCookieWarningHelper.getCookie('pxa_cookie_warning');
if(!PxaCookieWarningHelper['cookieIsSet']) {PxaCookieWarningHelper.pxaPreventJsFromSettingCookies();}
</script>
)
}
[else]
page.headerData.86 {
	50 = TEXT
	50.value = isActiveConsent: false,
}
[globalVar = LIT:1 = {$plugin.tx_pxacookiebar.settings.useSubDomain}]
page.headerData.86 {
	20 {
		stdWrap.postUserFunc = Pixelant\PxaCookieBar\Utility\CookieUtility->replaceWithSubDomain
	}
}
[globalVar = LIT:bottomFix = {$plugin.tx_pxacookiebar.settings.position}]
	plugin.tx_pxacookiebar.settings.wrapperClasses = bottom-message-wrap
[else]
	plugin.tx_pxacookiebar.settings.wrapperClasses = top-message-wrap
[global]

cookieWarning = PAGE
cookieWarning.typeNum = 314638125
cookieWarning.config.no_cache = 1
cookieWarning.config.disableAllHeaderCode = 1

cookieWarning.5 = USER
cookieWarning.5 {
	userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
	extensionName = PxaCookieBar
	pluginName = Pxacookiebar
	vendorName = Pixelant
}